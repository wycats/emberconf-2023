{
  "fileTypes": ["js", "ts", "gjs", "gts"],
  "injectionSelector": "L:source.js -comment -(string -meta.embedded), L:source.ts -comment -(string -meta.embedded)",
  "injections": {
    "L:source": {
      "patterns": [
        {
          "match": "<",
          "name": "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  "patterns": [
    {
      "name": "string.js.taggedTemplate",
      "contentName": "meta.embedded.block.html",
      "begin": "(?x)(\\b(?:\\w+\\.)*(?:hbs|html)\\s*)(`)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.tagged-template.js"
        },
        "2": {
          "name": "punctuation.definition.string.template.begin.js"
        }
      },
      "end": "(`)",
      "endCaptures": {
        "0": {
          "name": "string.js"
        },
        "1": {
          "name": "punctuation.definition.string.template.end.js"
        }
      },
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.handlebars"
        }
      ]
    },
    {
      "begin": "((createTemplate|hbs|html|precompileTemplate))(\\()",
      "contentName": "meta.embedded.block.html",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.ts"
        },
        "2": {
          "name": "meta.function-call.ts"
        },
        "3": {
          "name": "meta.brace.round.ts"
        }
      },
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "meta.brace.round.ts"
        }
      },
      "patterns": [
        {
          "begin": "((`))",
          "beginCaptures": {
            "1": {
              "name": "string.template.ts"
            },
            "2": {
              "name": "punctuation.definition.string.template.begin.ts"
            }
          },
          "end": "((`))",
          "endCaptures": {
            "1": {
              "name": "string.template.ts"
            },
            "2": {
              "name": "punctuation.definition.string.template.end.ts"
            }
          },
          "patterns": [
            {
              "include": "text.html.handlebars"
            }
          ]
        },
        {
          "include": "source.ts"
        }
      ]
    },
    {
      "name": "meta.js.embeddedTemplateWithoutArgs",
      "begin": "\\s*(<)(template)\\s*(>)",
      "contentName": "meta.embedded.block.html",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.other.html"
        },
        "3": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "end": "(</)(template)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.other.html"
        },
        "3": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "patterns": [
        {
          "include": "text.html.handlebars"
        }
      ]
    },
    {
      "name": "meta.js.embeddedTemplateWithArgs",
      "begin": "(<)(template)",
      "contentName": "meta.embedded.block.html",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.other.html"
        }
      },
      "end": "(</)(template)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.html"
        },
        "2": {
          "name": "entity.name.tag.other.html"
        },
        "3": {
          "name": "punctuation.definition.tag.html"
        }
      },
      "patterns": [
        {
          "begin": "(?<=\\<template)",
          "end": "(?=\\>)",
          "patterns": [
            {
              "include": "text.html.handlebars#tag-stuff"
            }
          ]
        },
        {
          "begin": "(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.js"
            }
          },
          "end": "(?=</template>)",
          "contentName": "meta.html.embedded.block",
          "patterns": [
            {
              "include": "text.html.handlebars"
            }
          ]
        }
      ]
    }
  ],
  "scopeName": "inline.template"
}
